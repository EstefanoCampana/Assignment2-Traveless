@page "/reservations"
@using BlazorHybridApp.Data

<h1 class="text-center">Reservations Finder</h1>
<div class="d-flex justify-content-between">
	<h3>Code</h3>
	<input placeholder="Any" @bind=findRcode/>
	<h3>Airline</h3>
	<input placeholder="Any" @bind=findAname/>
	<h3>Name</h3>
	<input placeholder="Any" @bind=findCname/>
	<button @onclick=ReservationFinder>Find Reservations...</button>
</div>
<div class="form-group">
	<h1 class="text-center">Reservations</h1>
	<select class="form-select">
		@foreach (Reservation res in result)
		{
			<option value=@res>@res</option>
		}
	</select>
</div>
<div class="d-flex justify-content-center">
	<p></p>
</div>

<h1 class="text-center">Reserve</h1>
<div class="d-block">
	<h3>Reservation Code</h3>
	<input disabled placeholder="Reservation Code" @bind=reservation.Rcode/>
	<h3>Flight Code</h3>
	<input disabled placeholder="Flight Code" @bind=reservation.Fcode/>
	<h3>Airline</h3>
	<input disabled placeholder="Airline" @bind=reservation.Aname/>
	<h3>Cost</h3>
	<input disabled placeholder="Cost" @bind=reservation.Cost/>
	<h3>Name</h3>
	<input placeholder="Name" @bind=reservation.Cname/>
	<h3>Citizenship</h3>
	<input placeholder="Citizenship" @bind=reservation.Citizenship/>
	<h3>Status</h3>
	<input placeholder="Status" @bind=reservation.Status/>
</div>

<div class="d-flex justify-content-center">
	<button class="text-center"@onclick=Update>Update</button>
</div>
@code{
	Reservation reservation = new Reservation();
	List<Reservation> result = ReservationManager.PopulatedReservations();

	string errorMessage = String.Empty;
	string findRcode = String.Empty;
	string findAname = String.Empty;
	string findCname = String.Empty;

	private void Update()
	{
		reservation = updateList[1];
		try
		{
			if(String.IsNullOrEmpty(reservation.Cname) ||
				String.IsNullOrEmpty(reservation.Citizenship) ||
				String.IsNullOrEmpty(reservation.Status))
			{
				errorMessage = "Please fill all the entries";
			}
			else
			{
				errorMessage = String.Empty;
				ReservationManager.WriteToJson();
			}
		}
		catch (FormatException ex)
		{
			errorMessage = ex.Message;
		}
	}

	private async Task ReservationFinder()
	{
		result = ReservationManager.FindReservation(findRcode, findAname, findCname);
		string message = String.Empty;

		// If the reutrned list is empty
		if (result.Count == 0)
		{
			message = "No reservation is found";
		}
		// If there is only one returned list object
		else if (result.Count == 1)
		{
			message = $"{result.Count} reservation is found";
		}
		// If there are more than one returned objects
		else
		{
			message = $"{result.Count} reservations are found";
		}

		await App.Current.MainPage.DisplayAlert("Success", $"{message}", "OK"); // Display the indicated message
		ClearFields();  // Clear the fields for the next input
	}

	private void ClearFields()
	{
		findRcode = "";
		findAname = "";
		findCname = "";
	}
}
