@page "/flights"
@using BlazorHybridApp.Data

<h3 class="text-center">Flight Finder</h3>

<div class="d-flex gap-2">
    <div class="d-flex flex-column w-100">
        <label for="from">From:</label>
        <input id="from" @bind="from" placeholder="Any" class="form-control h-100"/>
    </div>
    <div class="d-flex flex-column w-100">
        <label for="to">To:</label>
        <input id="to" @bind="to" placeholder="Any" class="form-control h-100" />
    </div>
    <div class="d-flex flex-column w-100">
        <label for="day">Day:</label>
        <input id="day" @bind="day" placeholder="Any" class="form-control h-100"  />
    </div>
    <div class="d-flex flex-column w-100">
        <label>&nbsp;</label> 
        <button @onclick="SearchFlights" class="btn btn-primary w-100 h-100">Find flights</button>
    </div>
</div> 

<br />

<div>
    <h3 class="text-center">Flights</h3>
    <div class="border rounded">
        @if (flights == null || !flights.Any())
        {
            <p> Loading...</p>
        }
        else
        {
            <div>
                @foreach (var flight in flights)
                {
                    <p> @flight </p>
                }
            </div>
        }
    </div>
</div>

<br />

<h3 class="text-center">Reserve </h3>
<form>
    <div>
        <label>Flight Code:</label>
        <input disabled @bind=flight.FlightCode type="text" class="form-control" placeholder="Flight Code">
    </div>
    <div>
        <label>Airline:</label>
        <input disabled @bind="flight.Airline" type="text" class="form-control" placeholder="Airline">
    </div>
    <div>
        <label>Day:</label>
        <input disabled @bind="flight.Day" type="text" class="form-control" placeholder="Day">
    </div>
    <div>
        <label>Time:</label>
        <input disabled @bind="flight.Time" type="text" class="form-control" placeholder="Time">
    </div>
    <div>
        <label>Cost:</label>
        <input disabled @bind="flight.Cost" type="text" class="form-control" placeholder="0">
    </div>
    <div>
        <label>Name:</label>
        <input @bind="name" type="text" class="form-control" placeholder="Name">
    </div>
    <div>
        <label>Citizenship:</label>
        <input @bind="citizenship" type="text" class="form-control" placeholder="Citizenship">
    </div>
    <br />
    <button @onclick="ReserveFlight" class="btn btn-primary">Reserve</button> 
</form>

@code {
    Flight flight { get; set; } = new Flight();

    public string flightCode;
    public string airline;
    public string time;
    public string cost;
    public string name = String.Empty;
    public string citizenship = String.Empty;
    private string from;
    private string to;
    private string day;
    private List<Flight> flights;
    private string errorMessage = String.Empty;

    Reservation reservation { get; set; } = new Reservation();

    private async Task SearchFlights()
    {
        if (!string.IsNullOrWhiteSpace(from) && !string.IsNullOrWhiteSpace(to) && !string.IsNullOrWhiteSpace(day))
        {
            flights = await Task.Run(() => FlightManagement.FlightsFound(from, to, day));
            flight = flights[0];
        }

    }

    private async Task ReserveFlight()
    {

        try
        {
            if (string.IsNullOrEmpty(flight.FlightCode))
            {
                errorMessage = "Please search and select a flight first.";
                await App.Current.MainPage.DisplayAlert("Error", $"{errorMessage}", "OK");
            }
            else
            {
                string code = ReservationManager.MakeReservation(flight, name, citizenship);
                string message = "The reservation has been made.\n Your reservation code is " + code;
                await App.Current.MainPage.DisplayAlert("Success", $"{message}", "OK");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            await App.Current.MainPage.DisplayAlert("Error", $"{errorMessage}", "OK");
        }

    }
}
